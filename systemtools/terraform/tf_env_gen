#!/usr/bin/env python3
import requests, os, argparse
# import subprocess

# Set your GitLab personal access token and the GitLab instance URL
GITLAB_TOKEN = os.getenv('GITLAB_ACCESS_TOKEN')
GITLAB_URL = os.getenv('GITLAB_URL')

def search_project(query):
    headers = {'Private-Token': GITLAB_TOKEN}
    params = {'search': query}
    
    response = requests.get(f'{GITLAB_URL}/api/v4/projects', headers=headers, params=params)
    
    if response.status_code == 200:
        projects = response.json()
        return projects
    else:
        print(f"Error: {response.status_code} - {response.text}")
        return None

def main(args):
    if args.search:
        projects = search_project(args.search)
        
        if projects:
            print("Search results:")
            for project in projects:
                # print(f"ProjectID: {project['id']} - Project: {project['name']} - {project['web_url']}")
                # subprocess.run(f'export {PROJECT_ID}={project['id']}', shell=True)
                # subprocess.run(f'export {PROJECT_SUB_NAME}={project['name']}', shell=True)
                # subprocess.run(f'export {PROJECT_SUB_NAME}={project['name']}', shell=True)
                # subprocess.run(f'export {PROJECT_SUB_NAME}={project['name']}', shell=True)
                print(f"== {project['name']} ==")
                print(f"export TF_HTTP_ADDRESS={project['_links']['self']}/terraform/state/{project['name']}")
                print(f"export TF_HTTP_LOCK_ADDRESS={project['_links']['self']}/terraform/state/{project['name']}/lock")
                print(f"export TF_HTTP_UNLOCK_ADDRESS={project['_links']['self']}/terraform/state/{project['name']}/lock")
                print(f'export TF_HTTP_LOCK_METHOD="POST"')
                print(f'export TF_HTTP_UNLOCK_METHOD="DELETE"')
                print(f'export TF_HTTP_USERNAME="${{GITLAB_USERNAME}}"')
                print(f'export TF_HTTP_USERNAME="${{GITLAB_ACCESS_TOKEN}}"')
                print(f'export TF_HTTP_RETRY_WAIT_MIN=5')
                print(f' ')
        else:
            print("No projects found.")
    else:
        parser.print_help()


if __name__ == "__main__" :
    parser = argparse.ArgumentParser(prog="tf_env_gen", description="generate environment paste for specific project")
    parser.add_argument('--search', '-s', help="provide string to search for all project,\n limit search result by adding longer string to match")
    args = parser.parse_args()
    main(args)