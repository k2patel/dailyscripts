#
#   - File::Grep -
#   This spec file was automatically generated by cpan2rpm [ver: 2.027]
#   The following arguments were used:
#       --name perl-file-grep --no-sign --packager k2patel@live.com File::Grep
#   For more information on cpan2rpm please visit: http://perl.arix.com/
#

%define pkgname perl-file-grep
%define filelist %{pkgname}-%{version}-filelist
%define NVR %{pkgname}-%{version}-%{release}
%define maketest 1

name:      perl-perl-file-grep
summary:   perl-file-grep - Find matches to a pattern in a series of files and related
version:   0.02
release:   1
vendor:    A. U. Thor <a.u.thor@a.galaxy.far.far.away>
packager:  k2patel@live.com
license:   Artistic
group:     Applications/CPAN
url:       http://www.cpan.org
buildroot: %{_tmppath}/%{name}-%{version}-%(id -u -n)
buildarch: noarch
prefix:    %(echo %{_prefix})
source:    File-Grep-0.02.tar.gz

%description
File::Grep mimics the functionality of the grep function in perl, but
applying it to files instead of a list.  This is similar in nature to 
the UNIX grep command, but more powerful as the pattern can be any legal
perl function. 

The main functions provided by this module are:

=over

=item fgrep BLOCK LIST

Performs a grep operation on the files in LIST, using BLOCK as the
critiria for accepting a line or not.  Any lines that match will be 
added to an array that will be returned to the caller.  Note that 
in void context, this function will immediate return true on the first
match, false otherwise, and in scalar context, it will only return
the number of matches.

When entering BLOCK, the $_ variable will be localized to the current
line.  In addition, you will be given the position in LIST of the current
file, the line number in that file, and the line itself as arguments 
to this function.  While you can change $_ if necessary, only the 
original value of the line will be added to the returned list.  If you
need to get the modified value, use fmap (described below).

The LIST can contain either scalars or filehandle (or filehandle-like
objects).  If the item is a scalar, it will be attempted to be opened 
and read in as normal.  Otherwise it will be treated as a filehandle.  
Any errors resulting from IO may be reported to STDERR by setting the 
class variable, $File::Grep::SILENT to false; otherwise, no error
indication is given.

=item fmap BLOCK LIST

Performs a map operation on the files in LIST, using BLOCK as the
mapping function.  The results from BLOCK will be appended to the 
list that is returned at the end of the call.

=item fdo BLOCK LIST

Performs the equivalent of a foreach operation on the files in LIST,
performing BLOCK for each line in each file.  This function has no
return value.  If you need to specialize more than what fgrep or fmap
offer, you can use this function.

=back

In addition, if you need additional fine control, you can use the internal
function _fgrep_process.  This is called just like fgrep/fmap/fdo, as
in "_fgrep_process BLOCK LIST" except that you can control when the 
fucntion 'short circuits' by the return value from BLOCK.  If, after
processing a line, the BLOCK returns a negative number, the entire 
process is aborted, closing any open filehandles that were opened by 
the function.  If the return value is 0, the current file is aborted,
closed if opened by the function and the next file is then searched.
A positive return value will simply go on to the next line as appropriate.

#
# This package was generated automatically with the cpan2rpm
# utility.  To get this software or for more information
# please visit: http://perl.arix.com/
#

%prep
%setup -q -n File-Grep-%{version} 
chmod -R u+w %{_builddir}/File-Grep-%{version}

%build
grep -rsl '^#!.*perl' . |
grep -v '.bak$' |xargs --no-run-if-empty \
%__perl -MExtUtils::MakeMaker -e 'MY->fixin(@ARGV)'
CFLAGS="$RPM_OPT_FLAGS"
%{__perl} Makefile.PL `%{__perl} -MExtUtils::MakeMaker -e ' print qq|PREFIX=%{buildroot}%{_prefix}| if \$ExtUtils::MakeMaker::VERSION =~ /5\.9[1-6]|6\.0[0-5]/ '`
%{__make} 
%if %maketest
%{__make} test
%endif

%install
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%{makeinstall} `%{__perl} -MExtUtils::MakeMaker -e ' print \$ExtUtils::MakeMaker::VERSION <= 6.05 ? qq|PREFIX=%{buildroot}%{_prefix}| : qq|DESTDIR=%{buildroot}| '`

cmd=/usr/share/spec-helper/compress_files
[ -x $cmd ] || cmd=/usr/lib/rpm/brp-compress
[ -x $cmd ] && $cmd

# SuSE Linux
if [ -e /etc/SuSE-release -o -e /etc/UnitedLinux-release ]
then
    %{__mkdir_p} %{buildroot}/var/adm/perl-modules
    %{__cat} `find %{buildroot} -name "perllocal.pod"`  \
        | %{__sed} -e s+%{buildroot}++g                 \
        > %{buildroot}/var/adm/perl-modules/%{name}
fi

# remove special files
find %{buildroot} -name "perllocal.pod" \
    -o -name ".packlist"                \
    -o -name "*.bs"                     \
    |xargs -i rm -f {}

# no empty directories
find %{buildroot}%{_prefix}             \
    -type d -depth                      \
    -exec rmdir {} \; 2>/dev/null

%{__perl} -MFile::Find -le '
    find({ wanted => \&wanted, no_chdir => 1}, "%{buildroot}");
    print "%doc  Changes README";
    for my $x (sort @dirs, @files) {
        push @ret, $x unless indirs($x);
        }
    print join "\n", sort @ret;

    sub wanted {
        return if /auto$/;

        local $_ = $File::Find::name;
        my $f = $_; s|^\Q%{buildroot}\E||;
        return unless length;
        return $files[@files] = $_ if -f $f;

        $d = $_;
        /\Q$d\E/ && return for reverse sort @INC;
        $d =~ /\Q$_\E/ && return
            for qw|/etc %_prefix/man %_prefix/bin %_prefix/share|;

        $dirs[@dirs] = $_;
        }

    sub indirs {
        my $x = shift;
        $x =~ /^\Q$_\E\// && $x ne $_ && return 1 for @dirs;
        }
    ' > %filelist

[ -z %filelist ] && {
    echo "ERROR: empty %files listing"
    exit -1
    }

%clean
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%files -f %filelist
%defattr(-,root,root)

%changelog
* Tue Mar 10 2015 k2patel@live.com
- Initial build.