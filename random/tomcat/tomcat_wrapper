#! /usr/bin/env python
# Author : Ketan Patel http://k2patel.in
# 
# License : BSD
# Usage : python tomcat_wrapper
####

import sys
import requests
import argparse
from requests.auth import HTTPBasicAuth
import base64
import ConfigParser

#Parse arguments
parser = argparse.ArgumentParser(
    description=__doc__)

parser.add_argument("-a", "--action", help="Action to take 'reload', 'stop', 'start'", type=str, default=reload)
parser.add_argument("-c", "--context", help="Enter name of webapp, where you want to send action", type=str, required=True )
parser.add_argument("-b", "--block", help="Configuration Block to get config", type=str, required=True )

args = parser.parse_args()

config = ConfigParser.ConfigParser()
config.readfp(open(r'tomcat_wrapper.conf'))

def get_config_value(get_cl_variable):
	if config.has_option(args.block , get_cl_variable):
		rt_variable = config.get(args.block , get_cl_variable)
	else:
		rt_variable = config.get('global', get_cl_variable)
	return rt_variable

username = get_config_value('username')
password = base64.b64decode(get_config_value('password'))
_host = config.get(args.block, 'host')
_port = get_config_value('port')
_manager = get_config_value('manager')


URL = 'http://' + _host + ':' + _port + _manager + '/text/' + args.action + '?path=/' + args.context

resp = requests.get(URL, auth=HTTPBasicAuth(username, password))

if 'OK' not in resp.text:
	print "Failed with following error : \n" + resp.text
	sys.exit(1)
else:
    print "Successfull : \n" + resp.text
    sys.exit(0)
