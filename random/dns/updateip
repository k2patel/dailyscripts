#!/usr/bin/env python3

import requests
import json

## Update following value
cloudflare_api_key = <api_key>
domain_name = <FQDN>
user_name = <user_id>
## Follwing statement only works with following format
#  wiki.k2patel.in -> which will be converted to k2patel.in
zone = domain_name.partition('.')[2]

## You mostly do not require to modify further. Unless trying to update record other than 'A'
newip = requests.get('https://ipv4.icanhazip.com')

headers = {
 'X-Auth-Email': user_name,
 'X-Auth-Key': cloudflare_api_key,
 'Content-Type': 'application/json',
}

# Get Zone id for the domain
def get_zone(domain_zone):
    z_post = {
    'status': 'active',
    }
    j_data = json.dumps(z_post)
    z_uri = 'https://api.cloudflare.com/client/v4/zones/?' + domain_zone
    r = requests.get(z_uri, headers=headers, data=j_data)
    j_return = json.loads(r.text)
    result = j_return['result']
    for value in result:
        z_id = value['id']
    return z_id

# Get Domain id and IP for the FQDN
def get_domain_id(domain_name, z_id):
    d_post = {
     'type': 'A',
     'name': domain_name,
    }
    j_data = json.dumps(d_post)
    d_uri = 'https://api.cloudflare.com/client/v4/zones/' + z_id + '/dns_records?'
    r = requests.get(d_uri, headers=headers, data=j_data)
    j_return = json.loads(r.text)
    result = j_return['result']
    for value in result:
        if 'name' in value and value['name'] == domain_name:
            d_ip = value['content']
            d_id = value['id']
            continue

    return d_id, d_ip

def update_ip(new_ip, z_id, d_id, dns_name, zone):
   d_post = {
      'type': 'A',
      'name': dns_name,
      'content': new_ip,
      'zone_id': z_id,
      'zone_name': zone,
      'data':{}
   }
   j_data = json.dumps(d_post)
   #print(j_data)
   n_uri = 'https://api.cloudflare.com/client/v4/zones/' + z_id + '/dns_records/' + d_id
   #print(n_uri)
   r = requests.put(n_uri, headers=headers, data=j_data)
   #print(headers)
   j_return = json.loads(r.text)
   #print(j_return)
   if j_return['success'] is True :
       print('Updated : ' + dns_name)
   else:
       print(j_return['errors'])

if __name__ == '__main__':
    z_id = get_zone(zone)
    new_ip = newip.text.strip()
    d_id, d_ip = get_domain_id(domain_name, z_id)
    if d_ip == new_ip:
        print('ip is same')
    else:
        print('Updating IP to : '+ new_ip)
        update_ip(new_ip, z_id, d_id, domain_name, zone)
